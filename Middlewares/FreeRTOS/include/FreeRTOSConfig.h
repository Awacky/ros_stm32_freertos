

#ifndef FREERTOS_CONFIG_H
#define FREERTOS_CONFIG_H

#if defined(__ICCARM__) || defined(__CC_ARM) || defined(__GNUC__)
  #include <stdint.h>
  extern uint32_t SystemCoreClock;
#endif
#ifndef CMSIS_device_header
#define CMSIS_device_header "stm32f4xx.h"
#endif /* CMSIS_device_header */

/***************************************************************************************************************/
/*                                        FreeRTOS基础配置配置选项                                              */
/***************************************************************************************************************/
#define configENABLE_FPU                          	0
#define configENABLE_MPU                          	0

#define configUSE_PREEMPTION					  	1                       //1使用抢占式内核，0使用协程
#define configUSE_TIME_SLICING					  	1						//1使能时间片调度(默认式使能的)
#define configUSE_PORT_OPTIMISED_TASK_SELECTION		0                       //1启用特殊方法来选择下一个要运行的任务//1
																			//一般是硬件计算前导零指令，如果所使用的
																			//MCU没有这些硬件指令的话此宏应该设置为0！
#define configUSE_TICKLESS_IDLE					    0                       //1启用低功耗tickless模式 
#define configUSE_QUEUE_SETS						1                       //为1时启用队列 
#define configCPU_CLOCK_HZ                        	( SystemCoreClock )     //CPU频率
#define configTICK_RATE_HZ                        	((TickType_t)1000)      //时钟节拍频率，这里设置为1000，周期就是1ms
#define configMAX_PRIORITIES                      	( 32 )                  //可使用的最大优先级                
#define configMINIMAL_STACK_SIZE                  	((uint16_t)130)         //空闲任务使用的堆栈大小
#define configMAX_TASK_NAME_LEN                  	( 16 )                  //任务名字字符串长度

#define configIDLE_SHOULD_YIELD						1                       //为1时空闲任务放弃CPU使用权给其他同优先级的用户任务 N
#define configUSE_TASK_NOTIFICATIONS   				1                       //为1时开启任务通知功能，默认开启 N
#define configUSE_MUTEXES                			1
#define configQUEUE_REGISTRY_SIZE					8                       //不为0时表示启用队列记录，具体的值是可以记录的队列和信号量最大数目。

#define configCHECK_FOR_STACK_OVERFLOW				0                       //大于0时启用堆栈溢出检测功能，如果使用此功能 N
																			//用户必须提供一个栈溢出钩子函数，如果使用的话
																			//此值可以为1或者2，因为有两种栈溢出检测方法。
#define configUSE_RECURSIVE_MUTEXES					1                       //为1时使用递归互斥信号量
#define configUSE_MALLOC_FAILED_HOOK			 	0                       //1使用内存申请失败钩子函数
#define configUSE_APPLICATION_TASK_TAG			  	0                       //
#define configUSE_COUNTING_SEMAPHORES   			1						//为1时使用计数信号量

#define configMESSAGE_BUFFER_LENGTH_TYPE          	size_t					//N

/***************************************************************************************************************/
/*                                FreeRTOS与内存申请有关配置选项                                                */
/***************************************************************************************************************/
#define configSUPPORT_STATIC_ALLOCATION           	1                       //静态分配内存 N 1
#define configSUPPORT_DYNAMIC_ALLOCATION          	1                       //支持动态内存申请
#ifdef STM32F10X_HD
	#define configTOTAL_HEAP_SIZE					((size_t)(40*1024))    	//系统所有总的堆大小
#else 
	#define configTOTAL_HEAP_SIZE					((size_t)(60*1024))    	//系统所有总的堆大小 74
#endif

/***************************************************************************************************************/
/*                                FreeRTOS与钩子函数有关的配置选项                                              */
/***************************************************************************************************************/
#define configUSE_IDLE_HOOK							1                       //1，使用空闲钩子；0，不使用
#define configUSE_TICK_HOOK							0                       //1，使用时间片钩子；0，不使用

/***************************************************************************************************************/
/*                                FreeRTOS与运行时间和任务状态收集有关的配置选项                                 */
/***************************************************************************************************************/
#define configGENERATE_RUN_TIME_STATS	            0                       //为1时启用运行时间统计功能
#define configUSE_16_BIT_TICKS						0                       //系统节拍计数器变量数据类型，
																			//1表示为16位无符号整形，0表示为32位无符号整形
#define configUSE_TRACE_FACILITY					1
#define configUSE_STATS_FORMATTING_FUNCTIONS	    1                       //与宏同时为1时会编译下面3个函数
																			//prvWriteNameToBuffer(),vTaskList(),
																			//vTaskGetRunTimeStats()

/***************************************************************************************************************/
/*                                FreeRTOS与协程有关的配置选项                                                  */
/***************************************************************************************************************/
#define configUSE_CO_ROUTINES                    	0
#define configMAX_CO_ROUTINE_PRIORITIES          	( 2 )

/***************************************************************************************************************/
/*                                FreeRTOS与软件定时器有关的配置选项                                            */
/***************************************************************************************************************/
#define configUSE_TIMERS                         	1
#define configTIMER_TASK_PRIORITY		        	2//(configMAX_PRIORITIES-1)        //软件定时器优先级 2
#define configTIMER_QUEUE_LENGTH		        	5                               //软件定时器队列长度 10 
#define configTIMER_TASK_STACK_DEPTH	        	256//(configMINIMAL_STACK_SIZE*2)    //软件定时器任务堆栈大小 256

/***************************************************************************************************************/
/*                                FreeRTOS可选函数配置选项                                                      */
/***************************************************************************************************************/
#define INCLUDE_xTaskGetSchedulerState       		1
#define INCLUDE_vTaskPrioritySet             		1
#define INCLUDE_uxTaskPriorityGet            		1
#define INCLUDE_vTaskDelete                  		1
#define INCLUDE_vTaskCleanUpResources        		0	 //1
#define INCLUDE_vTaskSuspend                 		1
#define INCLUDE_vTaskDelayUntil              		1
#define INCLUDE_vTaskDelay                   		1
#define INCLUDE_xTimerPendFunctionCall       		1
#define INCLUDE_xQueueGetMutexHolder         		1
#define INCLUDE_uxTaskGetStackHighWaterMark  		1
#define INCLUDE_xTaskGetCurrentTaskHandle    		1
#define INCLUDE_eTaskGetState                		1

/* CMSIS-RTOS V2 flags */
#define configUSE_OS2_THREAD_SUSPEND_RESUME  1
#define configUSE_OS2_THREAD_ENUMERATE       1
#define configUSE_OS2_EVENTFLAGS_FROM_ISR    1
#define configUSE_OS2_THREAD_FLAGS           1
#define configUSE_OS2_TIMER                  1
#define configUSE_OS2_MUTEX                  1

#define USE_FreeRTOS_HEAP_4

/***************************************************************************************************************/
/*                                FreeRTOS与中断有关的配置选项                                                  */
/***************************************************************************************************************/
#ifdef __NVIC_PRIO_BITS
 #define configPRIO_BITS         __NVIC_PRIO_BITS
#else
 #define configPRIO_BITS         4
#endif

#define configLIBRARY_LOWEST_INTERRUPT_PRIORITY   15
#define configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY 5

#define configKERNEL_INTERRUPT_PRIORITY 		( configLIBRARY_LOWEST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )
#define configMAX_SYSCALL_INTERRUPT_PRIORITY 	( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) )

#define vPortSVCHandler    SVC_Handler
#define xPortPendSVHandler PendSV_Handler

/***************************************************************************************************************/
/*                                其他定义配置选项                                                              */
/***************************************************************************************************************/
#define configASSERT( x ) if ((x) == 0) {taskDISABLE_INTERRUPTS(); for( ;; );}
#define USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION 0

#endif 
